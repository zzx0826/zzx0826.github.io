<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>DP专题</title>
      <link href="/archives/dp.html"/>
      <url>/archives/dp.html</url>
      
        <content type="html"><![CDATA[<h2 id="什么是动态规划"><a href="#什么是动态规划" class="headerlink" title="什么是动态规划"></a>什么是动态规划</h2><blockquote><p>20世纪50年代初美国数学家R.E.Bellman(理查德.贝尔曼)等人在研究多阶段决策过程(multistep decision process)的优化问题时，提出了著名的最优化原理(principle of optimality)，把多阶段过程转化为一系列单阶段问题，逐个求解，创立了解决这类过程优化问题的新方法——动态规划(Dynamic Programming)。 </p></blockquote><p>动态规划，其实就是将整个问题划分为许多<strong>子问题</strong>,然后对每个子问题作出<strong>决策</strong>。</p><h2 id="基础动态规划"><a href="#基础动态规划" class="headerlink" title="基础动态规划"></a>基础动态规划</h2><h3 id="数字三角形"><a href="#数字三角形" class="headerlink" title="数字三角形"></a>数字三角形</h3><p>题目链接: <a href="https://www.luogu.com.cn/problem/P1216" target="_blank" rel="noopener">https://www.luogu.com.cn/problem/P1216</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">        <span class="number">7</span> </span><br><span class="line">      <span class="number">3</span>   <span class="number">8</span> </span><br><span class="line">    <span class="number">8</span>   <span class="number">1</span>   <span class="number">0</span> </span><br><span class="line">  <span class="number">2</span>   <span class="number">7</span>   <span class="number">4</span>   <span class="number">4</span> </span><br><span class="line"><span class="number">4</span>   <span class="number">5</span>   <span class="number">2</span>   <span class="number">6</span>   <span class="number">5</span></span><br></pre></td></tr></table></figure><p>针对如上这个例子，我们如果按照贪心的思路，是$7→8→1→7→5$,算出来是$28$。而$7→3→8→7→5$的结果为$30$。所以贪心是行不通的。</p><h4 id="设置状态"><a href="#设置状态" class="headerlink" title="设置状态"></a>设置状态</h4><p>定义$f[i][j]$为$\text{到达第}i\text{行第}j\text{列}$的最大值。</p><h4 id="转移方程"><a href="#转移方程" class="headerlink" title="转移方程"></a>转移方程</h4><p>我们从最后一层开始，由下往上走，不难得出方程:$f[i-1][j] = max(f[i][j],f[i][j+1])+a[i-1][j]$</p><h2 id="背包dp"><a href="#背包dp" class="headerlink" title="背包dp"></a>背包dp</h2><h3 id="01背包"><a href="#01背包" class="headerlink" title="01背包"></a>01背包</h3><p>采药: <a href="https://www.luogu.com.cn/problem/P1048" target="_blank" rel="noopener">https://www.luogu.com.cn/problem/P1048</a></p><p>确定状态:设$f[i][j]$为前$i$株草药总价值不超过$j$所获最大价值。</p><p>方程: $f[i][j]=max(f[i][j],f[i-1][j-w[i]]+v[i])$</p><p>由于第一维什么用也没有，所以舍掉:</p><p>优化方程: $f[j]=max(f[j],f[j-v[i]]+c[i])$</p><p>最终答案为$f[t]$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> j=t;j&gt;=v[i];j--)</span><br><span class="line">      &#123;</span><br><span class="line">            <span class="keyword">if</span>(f[j - v[i]] + c[i] &gt; f[j])f[j] = f[j - v[i]] + c[i];</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="坐标型动态规划"><a href="#坐标型动态规划" class="headerlink" title="坐标型动态规划"></a>坐标型动态规划</h2><p>爬楼梯: <a href="https://www.lintcode.com/problem/climbing-stairs/description" target="_blank" rel="noopener">https://www.lintcode.com/problem/climbing-stairs/description</a></p><p>确定状态：设$f[i]$为到达第$i$级楼梯的方案</p><p>对于每一层楼梯，我们可以由前一层爬一楼或前两层爬两楼。</p><p>方程: $f[i]=f[i-1]+f[i-2]$</p><h2 id="单序列动态规划"><a href="#单序列动态规划" class="headerlink" title="单序列动态规划"></a>单序列动态规划</h2><p>最长上升子序列: <a href="https://www.lintcode.com/problem/longest-increasing-subsequence/description" target="_blank" rel="noopener">https://www.lintcode.com/problem/longest-increasing-subsequence/description</a></p><p>确定状态: 设$f[i]$为以第$i$个结尾的最长上升子序列的长度。</p><p>方程: $f[i]=max(f[i],f[j]+1)(a[i]&gt;a[j])$</p><p>初值: $f[i]=1$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;i;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] &gt; a[j])f[i] = max(f[i],f[j] + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><p><strong>$End.$</strong></p>]]></content>
      
      
      <categories>
          
          <category> c++ </category>
          
          <category> dp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++ </tag>
            
            <tag> dp </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>luogu P4053 建筑抢修</title>
      <link href="/archives/luoguP4053.html"/>
      <url>/archives/luoguP4053.html</url>
      
        <content type="html"><![CDATA[<h2 id="题目链接"><a href="#题目链接" class="headerlink" title="题目链接"></a><a href="https://www.luogu.com.cn/problem/P4053" target="_blank" rel="noopener">题目链接</a></h2><h2 id="做法"><a href="#做法" class="headerlink" title="做法"></a>做法</h2><p>整体思路:贪心+反悔堆<br>首先，我们发现，如果只按$t1$排序是不行的，那么我们可以先按$t1$排序，然后在枚举过程中<strong>如果有一个建筑无法在这个时间内修完，那么我们就放弃它，在先前没有选择的拿来选择它</strong>。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">150000</span> + <span class="number">5</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> t1,t2;</span><br><span class="line"><span class="keyword">bool</span> <span class="keyword">operator</span> &lt; (node x)<span class="keyword">const</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> t1 &lt; x.t1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">int</span> n,ans;</span><br><span class="line">node a[N];</span><br><span class="line">priority_queue&lt;node&gt;q;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(node x,node y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x.t2 &lt; y.t2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;a[i].t1,&amp;a[i].t2);</span><br><span class="line">&#125;</span><br><span class="line">sort(a + <span class="number">1</span>,a + <span class="number">1</span> + n,cmp);</span><br><span class="line">ll Now = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Now + a[i].t1 &lt;= a[i].t2)</span><br><span class="line">&#123;</span><br><span class="line">ans++;</span><br><span class="line">Now += a[i].t1;</span><br><span class="line">q.push(a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">node x = q.top();</span><br><span class="line"><span class="keyword">if</span>(x.t1 &gt; a[i].t1)</span><br><span class="line">&#123;</span><br><span class="line">q.pop();</span><br><span class="line">Now -= x.t1,Now += a[i].t1;</span><br><span class="line">q.push(a[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这道题主要是用到了一个反悔堆的思想。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> c++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++ </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 题解 </tag>
            
            <tag> luogu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NKOJ2020五月大乱斗</title>
      <link href="/archives/NKOJ-2020-5.html"/>
      <url>/archives/NKOJ-2020-5.html</url>
      
        <content type="html"><![CDATA[<h2 id="A-AOE还是单体伤害"><a href="#A-AOE还是单体伤害" class="headerlink" title="A.AOE还是单体伤害"></a>A.AOE还是单体伤害</h2><p>题目链接:<a href="http://oi.nks.edu.cn/zh/Problem/Details/6886" target="_blank" rel="noopener">http://oi.nks.edu.cn/zh/Problem/Details/6886</a><br>很简单，贪心就完事了:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n,x,a[N];</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> ans;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &lt; y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;x);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line">sort(a + <span class="number">1</span>,a + <span class="number">1</span> + n,cmp);</span><br><span class="line"><span class="keyword">if</span>(x &gt; n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">ans += a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n-x+<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line">ans += (a[i] - a[n - x + <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans + x * a[n - x + <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="B-k-size字符串"><a href="#B-k-size字符串" class="headerlink" title="B.k-size字符串"></a>B.k-size字符串</h2><p>题目链接：<a href="http://oi.nks.edu.cn/zh/Problem/Details/6887" target="_blank" rel="noopener">http://oi.nks.edu.cn/zh/Problem/Details/6887</a><br>先对字符串分段，再求逆元，因为$mod=10^{9} + 7$，所以写费马小吧。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,k;</span><br><span class="line">ll f[N],ans;</span><br><span class="line"><span class="function">ll <span class="title">ksm</span><span class="params">(ll a,ll n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll ans = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(n &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(n &amp; <span class="number">1</span>)ans = (ans * a) % mod;</span><br><span class="line">a = (a * a) % mod;</span><br><span class="line">n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;n,&amp;m,&amp;k);</span><br><span class="line">f[<span class="number">0</span>] = <span class="number">1</span>; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100000</span>;i++)</span><br><span class="line">f[i] = (f[i - <span class="number">1</span>] * i) % mod;</span><br><span class="line"><span class="keyword">if</span>(k &amp; <span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(n &gt;= (k + <span class="number">1</span>) / <span class="number">2</span> &amp;&amp; m &gt;= k / <span class="number">2</span>)</span><br><span class="line">ans += (((f[n - <span class="number">1</span>] * ksm(f[k / <span class="number">2</span>], mod - <span class="number">2</span>)) % mod * ksm(f[n - k / <span class="number">2</span> - <span class="number">1</span>], mod - <span class="number">2</span>)) % mod) * (((f[m - <span class="number">1</span>] * ksm(f[k / <span class="number">2</span> - <span class="number">1</span>], mod - <span class="number">2</span>)) % mod * ksm(f[m - k / <span class="number">2</span>], mod - <span class="number">2</span>)) % mod) % mod;</span><br><span class="line"><span class="keyword">if</span>(n &gt;= k / <span class="number">2</span> &amp;&amp; m &gt;= (k + <span class="number">1</span>) / <span class="number">2</span>)</span><br><span class="line">ans += (((f[m - <span class="number">1</span>] * ksm(f[k / <span class="number">2</span>], mod - <span class="number">2</span>)) % mod * ksm(f[m - k / <span class="number">2</span> - <span class="number">1</span>], mod - <span class="number">2</span>)) % mod) * (((f[n - <span class="number">1</span>] * ksm(f[k / <span class="number">2</span> - <span class="number">1</span>], mod - <span class="number">2</span>)) % mod * ksm(f[n - k / <span class="number">2</span>], mod - <span class="number">2</span>)) % mod) % mod;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(n &gt;= k / <span class="number">2</span> &amp;&amp; m &gt;= k / <span class="number">2</span>)</span><br><span class="line">ans += <span class="number">2</span> * (((f[n - <span class="number">1</span>] * ksm(f[k / <span class="number">2</span> - <span class="number">1</span>], mod - <span class="number">2</span>)) % mod * ksm(f[n - k / <span class="number">2</span>], mod - <span class="number">2</span>)) % mod) * (((f[m - <span class="number">1</span>] * ksm(f[k / <span class="number">2</span> - <span class="number">1</span>], mod - <span class="number">2</span>)) % mod * ksm(f[m - k / <span class="number">2</span>], mod - <span class="number">2</span>)) % mod) % mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="C-白魔法师"><a href="#C-白魔法师" class="headerlink" title="C.白魔法师"></a>C.白魔法师</h2><p>不会。<br>题目链接: <a href="http://oi.nks.edu.cn/zh/Problem/Details/6888" target="_blank" rel="noopener">http://oi.nks.edu.cn/zh/Problem/Details/6888</a></p><h2 id="D-点击消除"><a href="#D-点击消除" class="headerlink" title="D.点击消除"></a>D.点击消除</h2><p>题目链接: <a href="http://oi.nks.edu.cn/zh/Problem/Details/6889" target="_blank" rel="noopener">http://oi.nks.edu.cn/zh/Problem/Details/6889</a><br>模拟+暴力，循环判断就行了:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">3e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="built_in">string</span> s;</span><br><span class="line"><span class="keyword">bool</span> dis[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">check</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">bool</span> mark = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=s.length();i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s[i] == s[i + <span class="number">1</span>] &amp;&amp; !dis[i] &amp;&amp; !dis[i + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">dis[i] = <span class="number">1</span>,dis[i + <span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">mark = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(mark)<span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; s;</span><br><span class="line"><span class="keyword">while</span>(check() == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">string</span> ss = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length();i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(dis[i] == <span class="number">0</span>)ss += s[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;s.length();i++)dis[i] = <span class="number">0</span>;</span><br><span class="line">s = ss;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(s == <span class="string">""</span>)<span class="built_in">printf</span>(<span class="string">"0"</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">cout</span> &lt;&lt; s;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="E-自我检索"><a href="#E-自我检索" class="headerlink" title="E.自我检索"></a>E.自我检索</h2><p>题目链接: <a href="http://oi.nks.edu.cn/zh/Problem/Details/6890" target="_blank" rel="noopener">http://oi.nks.edu.cn/zh/Problem/Details/6890</a><br>模拟，easy:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,a[N];</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">q</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)sum += a[i];</span><br><span class="line"><span class="keyword">return</span> sum / n;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n - m;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n-m+<span class="number">1</span>;i&lt;=n;i++)a[i] = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.5lf "</span>,q());</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n-m+<span class="number">1</span>;i&lt;=n;i++)a[i] = <span class="number">5</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.5lf"</span>,q());</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="F-解方程"><a href="#F-解方程" class="headerlink" title="F.解方程"></a>F.解方程</h2><p>题目链接: <a href="http://oi.nks.edu.cn/zh/Problem/Details/6891" target="_blank" rel="noopener">http://oi.nks.edu.cn/zh/Problem/Details/6891</a><br>$∵a,b,c &gt; 0$,所以是一个单调函数，二分答案就行了，注意为控制精度，多二分几次:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> a,b,c;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line"><span class="keyword">double</span> l = <span class="number">1</span>,r = <span class="number">1e9</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">100</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">double</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">pow</span>(mid,a) + b * <span class="built_in">log</span>(mid) &gt;= c)r = mid;</span><br><span class="line"><span class="keyword">else</span> l = mid;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.7lf"</span>,l);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="G-神奇的字母"><a href="#G-神奇的字母" class="headerlink" title="G.神奇的字母"></a>G.神奇的字母</h2><p>依然模拟。。。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">123</span>],maxn;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;c))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(c &gt;= <span class="string">'a'</span> &amp;&amp; c &lt;= <span class="string">'z'</span>)</span><br><span class="line">&#123;</span><br><span class="line">ans[(<span class="keyword">int</span>)(c - <span class="string">'a'</span>)]++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">char</span> res;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;=<span class="number">25</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(ans[i] &gt; maxn)</span><br><span class="line">&#123;</span><br><span class="line">maxn = ans[i],res = (<span class="keyword">char</span>)(<span class="string">'a'</span> + i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%c"</span>,res);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="H-异或和之和"><a href="#H-异或和之和" class="headerlink" title="H.异或和之和"></a>H.异或和之和</h2><p>题目链接: <a href="http://oi.nks.edu.cn/zh/Problem/Details/6893" target="_blank" rel="noopener">http://oi.nks.edu.cn/zh/Problem/Details/6893</a><br>将每个二进制位分开处理，最后汇总一下。</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> ll long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">2e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">const</span> ll mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> n,sum[<span class="number">64</span>];</span><br><span class="line">ll f[N],ans[<span class="number">64</span>],answ;</span><br><span class="line"><span class="function">ll <span class="title">ksm</span><span class="params">(ll a,ll n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll ans = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(n &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(n &amp; <span class="number">1</span>)ans = (ans * a) % mod;</span><br><span class="line">a = (a * a) % mod;</span><br><span class="line">n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">f[<span class="number">0</span>] = <span class="number">1</span>; </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">200000</span>;i++)</span><br><span class="line">f[i] = (f[i - <span class="number">1</span>] * i) % mod;</span><br><span class="line">ll a;</span><br><span class="line"><span class="keyword">int</span> p;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%lld"</span>,&amp;a);</span><br><span class="line">p = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span>(a)</span><br><span class="line">&#123;</span><br><span class="line">sum[p] += a &amp; <span class="number">1</span>;</span><br><span class="line">p++;</span><br><span class="line">a &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">64</span>;i++)</span><br><span class="line">ans[i] = (sum[i] * (((f[n - sum[i]] * ksm(f[<span class="number">2</span>], mod - <span class="number">2</span>)) % mod * ksm(f[n - sum[i] - <span class="number">2</span>], mod - <span class="number">2</span>)) % mod) + (((f[sum[i]] * ksm(f[<span class="number">3</span>], mod - <span class="number">2</span>)) % mod * ksm(f[sum[i] - <span class="number">3</span>], mod - <span class="number">2</span>)) % mod)) % mod;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">63</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">answ = ((answ &lt;&lt; <span class="number">1</span>) + ans[i]) % mod;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld"</span>,answ);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> c++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++ </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 题解 </tag>
            
            <tag> NKOJ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NKOJ2644 【SCOI2010 DAY2】传送带</title>
      <link href="/archives/NKOJ2644.html"/>
      <url>/archives/NKOJ2644.html</url>
      
        <content type="html"><![CDATA[<p>此题同样可以在<a href="https://www.luogu.com.cn/problem/P2571" target="_blank" rel="noopener">洛谷P2571</a>看到。</p><h1 id="解题过程"><a href="#解题过程" class="headerlink" title="解题过程"></a>解题过程</h1><p>这题通过思考，可以看出这是一个三分套三分的题，代码比较难啃(反正我啃了很久)</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">double</span> ax,ay,bx,by;</span><br><span class="line"><span class="keyword">double</span> cx,cy,dx,dy;</span><br><span class="line"><span class="keyword">double</span> p,q,r;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">dian</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">double</span> y,<span class="keyword">double</span> xx,<span class="keyword">double</span> yy)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">sqrt</span>((x-xx)*(x-xx)+(y-yy)*(y-yy));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">f</span><span class="params">(<span class="keyword">double</span> x,<span class="keyword">double</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">double</span> lx = cx,ly = cy,rx = dx,ry = dy;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">fabs</span>(rx - lx) &gt; <span class="number">1e-10</span> || <span class="built_in">fabs</span>(ry - ly) &gt; <span class="number">1e-10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">double</span> m1x = (<span class="number">2</span> * lx + rx) / <span class="number">3</span>,m2x = (lx + <span class="number">2</span> * rx) / <span class="number">3</span>,m1y = (<span class="number">2</span> * ly + ry) / <span class="number">3</span>,m2y = (ly + <span class="number">2</span> * ry) / <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">double</span> a1 = dian(ax,ay,x,y) / p + dian(x,y,m1x,m1y) / r + dian(m1x,m1y,dx,dy) / q;</span><br><span class="line">        <span class="keyword">double</span> a2 = dian(ax,ay,x,y) / p + dian(x,y,m2x,m2y) / r + dian(m2x,m2y,dx,dy) / q;</span><br><span class="line">        <span class="keyword">if</span>(a1 &gt; a2)lx = m1x,ly = m1y;</span><br><span class="line">        <span class="keyword">else</span> rx = m2x,ry = m2y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dian(ax,ay,x,y) / p + dian(x,y,lx,ly) / r + dian(lx,ly,dx,dy) / q;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">double</span> lx = ax,ly = ay,rx = bx,ry = by;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">fabs</span>(rx - lx) &gt; <span class="number">1e-10</span> || <span class="built_in">fabs</span>(ry - ly) &gt; <span class="number">1e-10</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">double</span> m1x = (<span class="number">2</span> * lx + rx) / <span class="number">3</span>,m2x = (lx + <span class="number">2</span> * rx) / <span class="number">3</span>,m1y = (<span class="number">2</span> * ly + ry) / <span class="number">3</span>,m2y = (ly + <span class="number">2</span> * ry) / <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">if</span>(f(m1x,m1y) &lt; f(m2x,m2y))rx = m2x,ry = m2y;</span><br><span class="line">        <span class="keyword">else</span> lx = m1x,ly = m1y;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f(lx,ly);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; ax &gt;&gt; ay &gt;&gt; bx &gt;&gt; by &gt;&gt; cx &gt;&gt; cy &gt;&gt; dx &gt;&gt; dy;</span><br><span class="line">    <span class="built_in">cin</span> &gt;&gt; p &gt;&gt; q &gt;&gt; r;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%.2lf"</span>,solve());</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>本题到这就结束了，关于三分的知识请自行百度。</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> c++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++ </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo写作技巧(二)</title>
      <link href="/archives/hexo%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7-%E4%BA%8C.html"/>
      <url>/archives/hexo%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7-%E4%BA%8C.html</url>
      
        <content type="html"><![CDATA[<div class="note primary">            <ol><li><a href="/blog/4adc9ea5.html">hexo写作技巧(一)</a></li><li><a href="/blog/75b65dee.html">hexo写作技巧(二)</a></li></ol>          </div><h2 id="iframe"><a href="#iframe" class="headerlink" title="iframe"></a>iframe</h2><div class="hide-block"><button class="hide-button button--animated" style="">用法    </button><span class="hide-content"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% iframe url [width] [height] %&#125;</span><br></pre></td></tr></table></figure></span></div><p>例如：</p><iframe src="https://www.luogu.org/" width="100%" height="300" frameborder="0" loading="lazy" allowfullscreen></iframe><h2 id="该主题的一些插件"><a href="#该主题的一些插件" class="headerlink" title="该主题的一些插件"></a>该主题的一些插件</h2><h3 id="Gallery-相册"><a href="#Gallery-相册" class="headerlink" title="Gallery 相册"></a>Gallery 相册</h3><blockquote><p>2.0.0 以上提供</p></blockquote><p>写法:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 图片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><p>示例:</p><div class="justified-gallery"><p><img src= "/img/loading.gif" data-src="https://ww1.yunjiexi.club/2020/03/15/G46Vz.png" alt="CR四周年快乐!"><br><img src= "/img/loading.gif" data-src="https://ww1.yunjiexi.club/2020/03/16/Gz7AU.jpg" alt="疫情期间，第一次见大堵车"></p>          </div><h3 id="tag-hide"><a href="#tag-hide" class="headerlink" title="tag-hide"></a>tag-hide</h3><p>写法:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideInline content,display,bg,color %&#125;</span><br><span class="line">&#123;% hideBlock display %&#125;</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><ul><li>content: 文本内容</li><li>display: 按钮显示文字</li><li>bg: 按钮背景颜色:</li><li>color: 按钮文字颜色</li></ul><p>例子1:</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">zzx0826可以AKIOI吗? &#123;% hideInline 肯定不可以,查看答案,#FF7242,#fff %&#125;</span><br></pre></td></tr></table></figure><p>zzx0826可以AKIOI吗? <span class="hide-inline"><button class="hide-button button--animated" style="background-color: #FF7242;color: #fff">查看答案  </button><span class="hide-content">肯定不可以</span></span><br>例子2:</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock 2020图集 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% gallery %&#125; </span><br><span class="line">![<span class="string">CR四周年快乐!</span>](<span class="link">https://ww1.yunjiexi.club/2020/03/15/G46Vz.png</span>)</span><br><span class="line">![<span class="string">疫情期间，第一次见大堵车</span>](<span class="link">https://ww1.yunjiexi.club/2020/03/16/Gz7AU.jpg</span>)</span><br><span class="line">&#123;% endgallery %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><div class="hide-block"><button class="hide-button button--animated" style="">2020图集    </button><span class="hide-content"><div class="justified-gallery"><p><img src= "/img/loading.gif" data-src="https://ww1.yunjiexi.club/2020/03/15/G46Vz.png" alt="CR四周年快乐!"><br><img src= "/img/loading.gif" data-src="https://ww1.yunjiexi.club/2020/03/16/Gz7AU.jpg" alt="疫情期间，第一次见大堵车"></p>          </div></span></div><h2 id="End"><a href="#End" class="headerlink" title="End."></a>End.</h2>]]></content>
      
      
      <categories>
          
          <category> markdown </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>valine评论插件自定义头像</title>
      <link href="/archives/valine%E8%AF%84%E8%AE%BA%E6%8F%92%E4%BB%B6%E8%87%AA%E5%AE%9A%E4%B9%89%E5%A4%B4%E5%83%8F.html"/>
      <url>/archives/valine%E8%AF%84%E8%AE%BA%E6%8F%92%E4%BB%B6%E8%87%AA%E5%AE%9A%E4%B9%89%E5%A4%B4%E5%83%8F.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>对于本博客的<code>valine</code>评论系统，个人感觉还是挺不错的~~，效果如下:<br><img src= "/img/loading.gif" data-src="https://ww1.yunjiexi.club/2020/03/19/GxW2w.png" alt="valine评论"><br>其实。。。。。。<br>看到了吧，这就是有头像和没头像的区别。</p><h2 id="注册账号"><a href="#注册账号" class="headerlink" title="注册账号"></a>注册账号</h2><p>首先，在<a href="https://cn.gravatar.com/" target="_blank" rel="noopener">这个上面</a>注册你的账号，(话说旁边那个Woedpress.com是个什么玩意儿)<br>原来，这就是Woedpress.<br>注册方法:傻瓜式操作</p><h2 id="更替头像"><a href="#更替头像" class="headerlink" title="更替头像"></a>更替头像</h2><p>进去之后跳到这个界面:<br><img src= "/img/loading.gif" data-src="https://ww1.yunjiexi.club/2020/03/19/GxGH9.png" alt="这个界面"><br>(<del>墓碑好评</del>)<br>然后点右上角那个东东，点击添加图像，然后有四种方法，自己添加就行了。</p><h2 id="食用方法"><a href="#食用方法" class="headerlink" title="食用方法"></a>食用方法</h2><p>在本$blog$评论时留下邮箱就是了</p><div class="note info">            <p>邮箱一定要与你刚刚注册的邮箱一致 </p>          </div><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><ol><li>上述操作没有问题但还是不能显示头像。<br>——那是因为他是全球同步的，所以需要等7天左右才会生效。</li><li>这东西有什么用<br>——装X.<h2 id="闲聊"><a href="#闲聊" class="headerlink" title="闲聊"></a>闲聊</h2>目前这个<code>valine</code>评论系统支持:name,email,url以及验证码(说实话，我曾经算错过555~~)<br>但不要说脏话，例如<code>博主好强</code>之类的，会被删的。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> valine </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> valine </tag>
            
            <tag> leancloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前缀和</title>
      <link href="/archives/%E5%89%8D%E7%BC%80%E5%92%8C.html"/>
      <url>/archives/%E5%89%8D%E7%BC%80%E5%92%8C.html</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><div class="note info">            <p>对于前缀和的基本原理,基本上都可以用容斥原理推导而来，前缀和是一种重要的预处理，能大大降低时间复杂度 </p>          </div><h2 id="一维前缀和"><a href="#一维前缀和" class="headerlink" title="一维前缀和"></a>一维前缀和</h2><p><strong>例题</strong>:<br>给定$n$个整数，给定$q$个询问，每次询问一个$k$，请快速回答出$\sum\limits_{i=1}^ka_i$($n\leq10^{5}$)</p><h3 id="初步分析"><a href="#初步分析" class="headerlink" title="初步分析"></a>初步分析</h3><p>此题我们很快会想到一种思路-模拟，代码也很好写:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> +<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n,q,k,a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;q);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(q--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;k);</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=k;i++)</span><br><span class="line">        &#123;</span><br><span class="line">            ans += a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是，经过我们分析，这种算法的时间复杂度为$O(n^{2})$,会TLE.</p><h3 id="进一步分析"><a href="#进一步分析" class="headerlink" title="进一步分析"></a>进一步分析</h3><p>我们有没有什么办法来降低复杂度呢?<br>我们令$sum_{i}$表示前$i$个数的和，那么我们可以很容易得到递推式:<br>$$sum_{i}=sum_{i-1}+a_{i}$$<br>这样只需要一开始$O(n)$计算，$O(1)$查询即可</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> +<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n,q,k,a[N],sum[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;q);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        sum[i] = sum[i - <span class="number">1</span>] + a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(q--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;k);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum[k]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例如:</p><figure class="highlight plain"><figcaption><span>样例输入</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">5 3</span><br><span class="line">1 3 2 4 6</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>样例输出</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">10</span><br><span class="line">1</span><br></pre></td></tr></table></figure><h2 id="二维前缀和"><a href="#二维前缀和" class="headerlink" title="二维前缀和"></a>二维前缀和</h2><p>例题:<br>给出一个矩阵$a$,请快速回答出以$a_{1,1}$为左上角,$a_{i,j}$为右下角的矩阵内数字总和。</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><p>第一眼可能是暴力，但有没有什么更快的办法呢?<br>同样，我们定义一个数组$sum$,$sum_{i}{j}$表示以$a_{1,1}$为左上角,$a_{i,j}$为右下角的矩阵内数字总和。<br>那么，我们可以通过容斥原理来理解，见下图:<br><img src= "/img/loading.gif" data-src="https://ww1.yunjiexi.club/2020/03/18/G7VRc.png" alt="容斥原理求二维前缀和"><br>通过图片，我们就很容易得到递推式:$sum_{i,j}=sum_{i-1,j}+sum_{i,j-1}-sum_{i-1,j-1}+a_{i}$</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,a[N][N],sum[N][N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=m;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i][j]);</span><br><span class="line">            sum[i][j] = sum[i - <span class="number">1</span>][j] + sum[i][j - <span class="number">1</span>] -sum[i - <span class="number">1</span>][j - <span class="number">1</span>] + a[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;i,&amp;j);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d"</span>,sum[i][j]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>例如:</p><figure class="highlight plain"><figcaption><span>样例输入</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">3 3</span><br><span class="line">1 4 2</span><br><span class="line">5 2 7</span><br><span class="line">8 2 1</span><br><span class="line">2 3</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>样例输出</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">21</span><br></pre></td></tr></table></figure><h2 id="差分数组"><a href="#差分数组" class="headerlink" title="差分数组"></a>差分数组</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><blockquote><p>差分，是一种和前缀和相对的策略。————出自<u>oiwiki</u></p></blockquote><p>对于一个$a$数组，我们之前已经学习过前缀和$sum$,现在我们来讲一个另一个东东————<u>差分</u><br>我们定义一个查分数组$b$,令$b_{i}=a_{i}-a_{i-1}$如:<br><img src= "/img/loading.gif" data-src="https://ww1.yunjiexi.club/2020/03/18/GX6Rq.png" alt="例子"><br>然后，经过我们的日思夜想，反复琢磨，废寝忘食的努力，我们发现一个结论:<br><strong>差分数组的前缀和就等于原数组!</strong><br>验证一下:</p><figure class="highlight plain"><figcaption><span>例子</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">b数组的前缀和:</span><br><span class="line">1,2,4,7</span><br></pre></td></tr></table></figure><p>再来证明一下:<br>设原数为:<br>$$a_{1},a_{2},a_{3}…a_{n}$$<br>则差分数组为：<br>$$a_{1},a_{2}-a_{1},a_{3}-a_{2}…a_{n}-a_{n-1}$$<br>求前缀和:<br>$$a_{1},a_{2},a_{3}…a_{n}$$<br>其实也很好推啦</p><h3 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h3><figure class="highlight plain"><figcaption><span>例题</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">有n个数。</span><br><span class="line"></span><br><span class="line">m次操作,每一次操作,给定l,r,k.将l~r区间的所有数增加k；</span><br><span class="line"></span><br><span class="line">最后有q个询问,给你 l,r ,每一次询问求出l~r的区间和。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>一眼看过去，全是<strong>线段树，树状数组</strong><br>但——今天讲的是差分。。。。。。<br>先给结论吧。<br>同样我们先定义一个差分数组$b$,则将$[l,r]$增加$k$只需要将$b_{l}+k$以及$b_{r+1}-k$<br>证明:<br>还是原来那个例子<br><img src= "/img/loading.gif" data-src="https://ww1.yunjiexi.club/2020/03/18/GX6Rq.png" alt="例子"><br>我们要给$[2,3]+5$，则改变后的差分数组即为$1,6,2,-2$<br>推导出原数组:$1,7,9,7$<br>不难看出，结论成立，所以说我们就可以$O(1)$查询了<br>代码就很好写了:</p><figure class="highlight cpp"><figcaption><span>例题代码</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e3</span> +<span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n,m,l,r,k,q;</span><br><span class="line"><span class="keyword">int</span> a[N],bsum[N],b[N],sum[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;a[i]);</span><br><span class="line">        b[i] = a[i] - a[i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(m--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;l,&amp;r,&amp;k);</span><br><span class="line">        b[l] += k,b[r + <span class="number">1</span>] -= k;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        bsum[i] = bsum[i - <span class="number">1</span>] + b[i];</span><br><span class="line">        sum[i] = sum[i - <span class="number">1</span>] + bsum[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;q);</span><br><span class="line">    <span class="keyword">while</span>(q--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;l,&amp;r);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,sum[r] - sum[l - <span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>样例输入</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">5 3</span><br><span class="line">1 4 2 6 8</span><br><span class="line">1 2 4</span><br><span class="line">4 6 2</span><br><span class="line">1 5 1</span><br><span class="line">3</span><br><span class="line">1 2</span><br><span class="line">1 5</span><br><span class="line">3 4</span><br></pre></td></tr></table></figure><figure class="highlight plain"><figcaption><span>样例输出</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">15</span><br><span class="line">38</span><br><span class="line">12</span><br></pre></td></tr></table></figure><p>应该没问题吧~~</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> c++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++ </tag>
            
            <tag> 笔记 </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>latex常用语法</title>
      <link href="/archives/latex%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95.html"/>
      <url>/archives/latex%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95.html</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>首先，你的博客必需安装了<code>mathjax</code>(非<code>Hexo</code>党略过),才能使用$ \LaTeX $<br>本文可能不全，更多知识请度娘<br>有些是hexo特定的，请大家自行实验，差距为<code>\</code>的区别<br>有些hexo可能渲染错误，请大家以自己的为准</p><hr><h2 id="LaTeX-的插入"><a href="#LaTeX-的插入" class="headerlink" title="$ \LaTeX $的插入"></a>$ \LaTeX $的插入</h2><p>$ \LaTeX $的插入有如下两种:</p><ol><li>行内插入，即用<code>$ $</code>括起来,举个例子:<figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ \LaTeX $</span><br></pre></td></tr></table></figure>$ \LaTeX $</li><li>独立模式，即独立成行并强制居中，举个例子:<figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$$ \LaTeX $$</span><br></pre></td></tr></table></figure>$$ \LaTeX $$</li></ol><hr><h2 id="开始学习"><a href="#开始学习" class="headerlink" title="开始学习"></a>开始学习</h2><h3 id="加声调"><a href="#加声调" class="headerlink" title="加声调"></a>加声调</h3><p>示例:</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ \bar&#123;a&#125; \acute&#123;a&#125; \check&#123;a&#125; \grave&#123;a&#125; $</span><br></pre></td></tr></table></figure><p>$ \bar{a} \acute{a} \check{a} \grave{a} $</p><h3 id="标准函数"><a href="#标准函数" class="headerlink" title="标准函数"></a>标准函数</h3><p>示例:</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ a^&#123;b&#125; a_&#123;b&#125; $</span><br><span class="line">$ \sin a \cos b \tan c \sec d \csc e \cot f $</span><br><span class="line">$ \arcsin a \arccos b \arctan c $ </span><br><span class="line">$ \sinh a \cosh b \tanh c \coth d $  </span><br><span class="line">$ \left\vert a\right\vert \min(x,y) \max(x,y) $</span><br></pre></td></tr></table></figure><p>$ a^{b} a_{b} $<br>$ \sin a \cos b \tan c \sec d \csc e \cot f $<br>$ \arcsin a \arccos b \arctan c $<br>$ \sinh a \cosh b \tanh c \coth d $<br>$ \left\vert a\right\vert \min(x,y) \max(x,y) $ </p><h3 id="模算术"><a href="#模算术" class="headerlink" title="模算术"></a>模算术</h3><p>示例:</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ a\equiv1\pmod&#123;m&#125; $ </span><br><span class="line">$ a\bmod b $ </span><br><span class="line">$ \gcd(m,n) \operatorname&#123;lcm&#125;(m,n) $</span><br></pre></td></tr></table></figure><p>$ a\equiv1\pmod{m} $<br>$ a\bmod b $<br>$ \gcd(m,n) \operatorname{lcm}(m,n) $<br>一个特别的%号:</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ a \\ %b $</span><br></pre></td></tr></table></figure><p>$ a \% b $</p><h3 id="根号"><a href="#根号" class="headerlink" title="根号"></a>根号</h3><p>示例:</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ \surd $</span><br><span class="line">$ \sqrt&#123;2&#125; $</span><br><span class="line">$ \sqrt&#123;n&#125;&#123;&#125; $</span><br><span class="line">$ \sqrt&#123;n&#125;&#123;a&#125; $</span><br></pre></td></tr></table></figure><p>$ \surd $<br>$ \sqrt{2} $<br>$ \sqrt{n}{} $<br>$ \sqrt{n}{a} $</p><h3 id="常用符号"><a href="#常用符号" class="headerlink" title="常用符号"></a>常用符号</h3><p>示例：</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ + $</span><br><span class="line">$ - $</span><br><span class="line">$ \pm $</span><br><span class="line">$ \times $</span><br><span class="line">$ \div $</span><br><span class="line">$ \divideontimes $</span><br><span class="line">$ \oplus $</span><br><span class="line">$ \otimes $</span><br><span class="line">$ \odot $</span><br></pre></td></tr></table></figure><p>$ + $<br>$ - $<br>$ \pm $<br>$ \times $<br>$ \div $<br>$ \divideontimes $<br>$ \oplus $<br>$ \otimes $<br>$ \odot $</p><h3 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h3><p>示例:</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ \&#123;\&#125; $</span><br><span class="line">$ \in $</span><br><span class="line">$ \notin $</span><br><span class="line">$ \ni $</span><br><span class="line">$ \not\ni $</span><br><span class="line">$ \cup $</span><br><span class="line">$ \Cup $</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br></pre></td></tr></table></figure><p>$ {} $<br>$ \in $<br>$ \notin $<br>$ \ni $<br>$ \not\ni $<br>$ \cup $<br>$ \Cup $</p><h3 id="关系符号"><a href="#关系符号" class="headerlink" title="关系符号"></a>关系符号</h3><p>示例</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ = $</span><br><span class="line">$ \ne $</span><br><span class="line">$ \equiv $</span><br><span class="line">$ \sim $</span><br><span class="line">$ \cong $</span><br><span class="line">$ <span class="xml"><span class="tag">&lt; \<span class="attr">nless</span> \<span class="attr">ll</span> \<span class="attr">not</span>\<span class="attr">ll</span> \<span class="attr">lll</span> \<span class="attr">not</span>\<span class="attr">lll</span> \<span class="attr">lessdot</span> $ </span></span></span><br><span class="line"><span class="xml">$ &gt;</span> \ngtr \gg \not\gg \ggg \not\ggg \gtrdot $ </span><br><span class="line">$ \le \leq \lneq \leqq \nleq \nleqq \lneqq \lvertneqq $ </span><br><span class="line">$ \ge \geq \gneq \geqq \ngeq \ngeqq \gneqq \gvertneqq $</span><br></pre></td></tr></table></figure><p>$ = $<br>$ \ne $<br>$ \equiv $<br>$ \sim $<br>$ \cong $<br>$ &lt; \nless \ll \not\ll \lll \not\lll \lessdot $<br>$ &gt; \ngtr \gg \not\gg \ggg \not\ggg \gtrdot $<br>$ \le \leq \lneq \leqq \nleq \nleqq \lneqq \lvertneqq $<br>$ \ge \geq \gneq \geqq \ngeq \ngeqq \gneqq \gvertneqq $ </p><h3 id="常用操作"><a href="#常用操作" class="headerlink" title="常用操作"></a>常用操作</h3><pre><code class="md">$ a^{b} $$ a_{b} $$ \overset{\frown}{AB} $ $ \underline{ABC} $ $ \sum<span class="emphasis">_{i=1}^na_</span>i \sum\limits<span class="emphasis">_{i=1}^na_</span>i $ $ \prod<span class="emphasis">_{i=1}^na_</span>i \prod\limits<span class="emphasis">_{i=1}^na_</span>i $ $ \frac{1}{2}=0.5 $ $ \dfrac{1}{2}=0.5 \dfrac{1}{x+\dfrac{3}{y+\dfrac{1}{5}}} $ $ \begin{vmatrix}a&amp;b\\c&amp;d\end{vmatrix} $$ \begin{pmatrix}a&amp;c\\b&amp;d\end{pmatrix} $$ \begin{Bmatrix}a&amp;c\\b&amp;d\end{Bmatrix} $$ \begin{vmatrix} \begin{Bmatrix}A &amp; \\ c &amp; d \end{Bmatrix} &amp; x\\ \dfrac{1}{2} &amp; \begin{matrix} 1 &amp; 2 \\ 3 &amp; 4 \end{matrix} \end{vmatrix} $   $ \begin{vmatrix} \begin{Bmatrix}A &amp; \\ c &amp; d \end{Bmatrix} &amp; x\\ \dfrac{1}{2} &amp; \begin{matrix} 1 &amp; 2 \\ 3 &amp; 4 \end{matrix} \end{vmatrix} $$ \left(\dfrac{1}{2}\right) \left(\dfrac{1}{x+\dfrac{2}{3}}\right) $ $ \left[\\dfrac{1}{2}\\right] $ $ \left\{\dfrac{1}{2}\right\} $$ \left|\dfrac{1}{2}\right| $ $$ \boxed{\sum\limits_{i = 1}^{n} i = \dfrac{n(n - 1)}{2}} $$$ x\ y $$ x\quad y $  </code></pre><p>$ a^{b} $</p><p>$ a_{b} $</p><p>$ \overset{\frown}{AB} $ </p><p>$ \underline{ABC} $ </p><p>$ \sum_{i=1}^na_i \sum\limits_{i=1}^na_i $ </p><p>$ \prod_{i=1}^na_i \prod\limits_{i=1}^na_i $ </p><p>$ \frac{1}{2}=0.5 $ </p><p>$ \dfrac{1}{2}=0.5 \dfrac{1}{x+\dfrac{3}{y+\dfrac{1}{5}}} $ </p><p>$ \begin{vmatrix}a&amp;b\c&amp;d\end{vmatrix} $</p><p>$ \begin{pmatrix}a&amp;c\b&amp;d\end{pmatrix} $</p><p>$ \begin{Bmatrix}a&amp;c\b&amp;d\end{Bmatrix} $</p><p>$ \begin{vmatrix} \begin{Bmatrix}A &amp; \ c &amp; d \end{Bmatrix} &amp; x\ \dfrac{1}{2} &amp; \begin{matrix} 1 &amp; 2 \ 3 &amp; 4 \end{matrix} \end{vmatrix} $   </p><p>$ \begin{vmatrix} \begin{Bmatrix}A &amp; \ c &amp; d \end{Bmatrix} &amp; x\ \dfrac{1}{2} &amp; \begin{matrix} 1 &amp; 2 \ 3 &amp; 4 \end{matrix} \end{vmatrix} $</p><p>$ \begin{cases}2x+9y-5z=10\4x+20y+z=24\x-\dfrac{1}{2}y+3z=8\end{cases} $</p><p>$ \left(\dfrac{1}{2}\right) \left(\dfrac{1}{x+\dfrac{2}{3}}\right) $ </p><p>$ \left|\dfrac{1}{2}\right| $ </p><p>$$ \boxed{\sum\limits_{i = 1}^{n} i = \dfrac{n(n - 1)}{2}} $$<br>$ x\ y $<br>$ x\quad y $</p><p>$$lim_{1\to+\infty}P(|\frac{1}{n}\sum_i^nX_i-\mu|&lt;\epsilon)=1, i=1,…,n$$  </p>]]></content>
      
      
      <categories>
          
          <category> LaTeX </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> LaTeX </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo写作技巧(一)</title>
      <link href="/archives/hexo%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7-%E4%B8%80.html"/>
      <url>/archives/hexo%E5%86%99%E4%BD%9C%E6%8A%80%E5%B7%A7-%E4%B8%80.html</url>
      
        <content type="html"><![CDATA[<div class="note primary">            <ol><li><a href="/blog/4adc9ea5.html">hexo写作技巧(一)</a></li><li><a href="/blog/75b65dee.html">hexo写作技巧(二)</a></li></ol>          </div><h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>这篇文章持续更新中，由于可能会较长，请大家慢慢食用。<br>Tips:本文的一些写作语法可能<strong>仅适用于<code>Hexo</code>博客</strong>，请大家不要乱食用。<br>由于过程中的一些问题，例如标题问题，会影响目录的效果，故本文关闭目录。<br>如有问题，请在下方留言↓。<br>由于markdown渲染问题，下方的斜体、粗体这一块预览可能有问题</p><hr><h1 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p><code>markdown</code>标题共分为六类:</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 这是一级标题</span></span><br><span class="line"><span class="section">## 这是二级标题</span></span><br><span class="line"><span class="section">### 这是三级标题</span></span><br><span class="line"><span class="section">#### 这是四级标题</span></span><br><span class="line"><span class="section">##### 这是五级标题</span></span><br><span class="line"><span class="section">###### 这是六级标题</span></span><br></pre></td></tr></table></figure><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6><hr><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><h3 id="加粗"><a href="#加粗" class="headerlink" title="加粗"></a>加粗</h3><p>用两个<code>**</code>包起来:</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="strong">**这是加粗字体**</span></span><br><span class="line"><span class="code">``` </span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">**这是加粗字体**</span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code"></span></span><br><span class="line"><span class="code">### 斜体</span></span><br><span class="line"><span class="code">用两个`*`包起来:</span></span><br></pre></td></tr></table></figure><p><em>这是斜体字体</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">*这是斜体字体*</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">### 斜体+粗体</span><br><span class="line">用两个&#96;***&#96;包起来:</span><br><span class="line">&#96;&#96;&#96;md</span><br><span class="line">***这是斜体加粗的文字***</span><br></pre></td></tr></table></figure><p><strong><em>这是斜体加粗的文字</em></strong></p><h3 id="删除线"><a href="#删除线" class="headerlink" title="删除线"></a>删除线</h3><p>用两个<code>~~</code>包起来:</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~这是删除线~~</span><br></pre></td></tr></table></figure><p><del>这是删除线</del></p><hr><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><p>普通的引用就是在文字前面加<code>&gt;</code>,也可以多级引用，只需加相应数量的<code>&gt;</code>即可:</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt; 一级引用</span></span><br><span class="line">&gt;&gt; 二级引用</span><br><span class="line">&gt;&gt;&gt; 三级引用</span><br><span class="line">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; 这也是引用</span><br></pre></td></tr></table></figure><blockquote><p>一级引用</p><blockquote><p>二级引用</p><blockquote><p>三级引用</p><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>这也是引用</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><hr><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>就是加三个或三个以上的<code>-</code>或<code>*</code>:</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="emphasis">***</span></span><br><span class="line">------</span><br><span class="line"><span class="strong">*****</span>*</span><br><span class="line">---------------------------</span><br><span class="line"><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>**</span><br></pre></td></tr></table></figure><hr><hr><hr><hr><hr><hr><hr><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p>语法:<code>[文字说明](地址)</code></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">百度</span>](<span class="link">https://www.baidu.com/</span>)</span><br></pre></td></tr></table></figure><p><a href="https://www.baidu.com/" target="_blank" rel="noopener">百度</a></p><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><p>语法:<code>![图片说明](图片地址)</code></p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">百度</span>](<span class="link">https://www.baidu.com/img/bd_logo1.png</span>)</span><br></pre></td></tr></table></figure><p><img src= "/img/loading.gif" data-src="https://www.baidu.com/img/bd_logo1.png" alt="百度"><br>注意，这里的图片路径是一个外链，可用图床生成外链。<br>图床推荐:<a href="https://imgchr.com/" target="_blank" rel="noopener">这个</a>,<a href="http://tuchuang.org/" target="_blank" rel="noopener">这个</a>,<a href="https://www.hualigs.cn/" target="_blank" rel="noopener">还有这个</a></p><h2 id="图片-链接"><a href="#图片-链接" class="headerlink" title="图片+链接"></a>图片+链接</h2><p>语法:<code>[![图片描述](图片地址)](链接地址)</code><br>简单来说，就是链接里面的描述可以随意套<code>markdown</code>:</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">![百度</span>](<span class="link">https://www.baidu.com/img/bd_logo1.png</span>)](<span class="link">https://www.baidu.com/</span>)</span><br></pre></td></tr></table></figure><p><a href="https://www.baidu.com/" target="_blank" rel="noopener"><img src= "/img/loading.gif" data-src="https://www.baidu.com/img/bd_logo1.png" alt="百度"></a></p><hr><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h3><p>用<code>+``-``*</code>都可以:</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">- </span>列表</span><br><span class="line"><span class="bullet">+ </span>列表</span><br><span class="line"><span class="bullet">* </span>列表</span><br></pre></td></tr></table></figure><ul><li>列表</li></ul><ul><li>列表</li></ul><ul><li>列表</li></ul><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><p>用数字+<code>.</code>即可</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">1. </span>第一条</span><br><span class="line"><span class="bullet">2. </span>第二条</span><br><span class="line"><span class="bullet">3. </span>第三条</span><br></pre></td></tr></table></figure><ol><li>第一条</li><li>第二条</li><li>第三条</li></ol><hr><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>语法:</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">|表头|表头|表头|</span><br><span class="line">|---|:--:|---:|</span><br><span class="line">|内容|内容|内容|</span><br></pre></td></tr></table></figure><p>第二行的<code>-</code>有一个就行</p><table><thead><tr><th>表头</th><th align="center">表头</th><th align="right">表头</th></tr></thead><tbody><tr><td>内容</td><td align="center">内容</td><td align="right">内容</td></tr></tbody></table><hr><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><h3 id="单行代码块"><a href="#单行代码块" class="headerlink" title="单行代码块"></a>单行代码块</h3><p>语法:</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="code">`这是一个单行代码块`</span></span><br></pre></td></tr></table></figure><p><code>这是一个单行代码块</code></p><h3 id="多行代码块"><a href="#多行代码块" class="headerlink" title="多行代码块"></a>多行代码块</h3><p>语法:</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">(<span class="code">```</span>)</span><br><span class="line">这是一个多行代码块</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">(<span class="code">```</span>)</span><br></pre></td></tr></table></figure><p>$\color{red}{Tips}$:<code>```</code>外面的()要舍去。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是一个多行代码块</span><br><span class="line">.</span><br><span class="line">.</span><br></pre></td></tr></table></figure><h3 id="多行代码高亮块"><a href="#多行代码高亮块" class="headerlink" title="多行代码高亮块"></a>多行代码高亮块</h3><p>语法:</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(<span class="code">```</span>)语言</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">(<span class="code">```</span>)</span><br></pre></td></tr></table></figure><p>例如:</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(<span class="code">```</span>)c++</span><br><span class="line"><span class="section">#include&lt;bits/stdc++.h&gt;</span></span><br><span class="line">(<span class="code">```</span>)</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br></pre></td></tr></table></figure><hr><p>至此，基本的<code>markdown</code>语法你就学会了，接下来是写作的实用技巧。</p><h2 id="写作进阶"><a href="#写作进阶" class="headerlink" title="写作进阶"></a>写作进阶</h2><h3 id="代码行标，高亮"><a href="#代码行标，高亮" class="headerlink" title="代码行标，高亮"></a>代码行标，高亮</h3><p>写法如下:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock lang:python line_number:true mark:3,5,8 %&#125;</span><br><span class="line">n=eval(input())</span><br><span class="line">if n==0:</span><br><span class="line">   print("Hello World")</span><br><span class="line">elif n&gt;0:</span><br><span class="line">   print("He\nll\no \nWo\nrl\nd")</span><br><span class="line">else:</span><br><span class="line">   for c in "Hello World":</span><br><span class="line">   print(c)</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">n=eval(input())</span><br><span class="line"><span class="keyword">if</span> n==<span class="number">0</span>:</span><br><span class="line marked">   print(<span class="string">"Hello World"</span>)</span><br><span class="line"><span class="keyword">elif</span> n&gt;<span class="number">0</span>:</span><br><span class="line marked">   print(<span class="string">"He\nll\no \nWo\nrl\nd"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">   <span class="keyword">for</span> c <span class="keyword">in</span> <span class="string">"Hello World"</span>:</span><br><span class="line marked">   print(c)</span><br></pre></td></tr></table></figure><h3 id="任务完成进度"><a href="#任务完成进度" class="headerlink" title="任务完成进度"></a>任务完成进度</h3><p>语法:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">- [x] 任务1</span><br><span class="line">- [ ] 任务2</span><br><span class="line">- [x] 任务3 </span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">其中`[]`表示未完成,`[x]`表示已完成。</span><br></pre></td></tr></table></figure><br/><ul><li><input checked="" disabled="" type="checkbox"> 任务1</li><li><input disabled="" type="checkbox"> 任务2</li><li><input checked="" disabled="" type="checkbox"> 任务3 </li></ul><br/><h3 id="Success-info-warning等提示信息"><a href="#Success-info-warning等提示信息" class="headerlink" title="Success,info,warning等提示信息"></a>Success,info,warning等提示信息</h3><p>语法:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note class_name %&#125; 内容 &#123;% endnote %&#125;</span><br><span class="line">其中，class_name是以下几种:</span><br><span class="line">default 默认</span><br><span class="line">primary 提示</span><br><span class="line">success 成功</span><br><span class="line">info 提示</span><br><span class="line">warning 警告</span><br><span class="line">danger 危险</span><br></pre></td></tr></table></figure><p>例如:</p><div class="note primary">            <p>这是一条提示信息 </p>          </div><div class="note success">            <p>这是一条成功信息 </p>          </div><div class="note info">            <p>这是一条提示信息 </p>          </div><div class="note warning">            <p>这是一条警告信息 </p>          </div><div class="note danger">            <p>这是一条危险信息 </p>          </div><p>上例写法如下:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note primary %&#125; 这是一条提示信息 &#123;% endnote %&#125;</span><br><span class="line">&#123;% note success %&#125; 这是一条成功信息 &#123;% endnote %&#125;</span><br><span class="line">&#123;% note info %&#125; 这是一条提示信息 &#123;% endnote %&#125;</span><br><span class="line">&#123;% note warning %&#125; 这是一条警告信息 &#123;% endnote %&#125;</span><br><span class="line">&#123;% note danger %&#125; 这是一条危险信息 &#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><h3 id="代码附加注释"><a href="#代码附加注释" class="headerlink" title="代码附加注释"></a>代码附加注释</h3><p>示例:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock 1.cpp lang:cpp %&#125;</span><br><span class="line">#include<span class="tag">&lt;<span class="name">bits</span>/<span class="attr">stdc</span>++<span class="attr">.h</span>&gt;</span></span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><figcaption><span>1.cpp</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br></pre></td></tr></table></figure><p>其中，<code>1.cpp</code>是代码附加注释，<code>lang:</code>后面接的是代码语言。</p><hr><h1 id="持续更新中……"><a href="#持续更新中……" class="headerlink" title="持续更新中……"></a>持续更新中……</h1>]]></content>
      
      
      <categories>
          
          <category> markdown </category>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>P6195-EER1-迫害</title>
      <link href="/archives/P6195-EER1-%E8%BF%AB%E5%AE%B3.html"/>
      <url>/archives/P6195-EER1-%E8%BF%AB%E5%AE%B3.html</url>
      
        <content type="html"><![CDATA[<p>这次月赛我虽然报了名没打这场月赛，赛后也花了一点时间来看了看题。<br>但由于我太弱了，只能做A、B两题。<br><img src= "/img/loading.gif" data-src="/img/A+B.gif" alt=""></p><h2 id="A题"><a href="#A题" class="headerlink" title="A题"></a>A题</h2><p>还是比较水的，模拟即可。</p><h2 id="B题-EER1-迫害"><a href="#B题-EER1-迫害" class="headerlink" title="B题 [EER1]迫害"></a>B题 [EER1]迫害</h2><p>首先，X有$ n $个$ 1 $,所以他至少可以迫害$ n $个人。<br>然后，对于$ m $张自定义数字:<br>第一个$ m $,代表的数字肯定是$ n + 1 $<br>第二个$ m $,代表的自然是$ n + 1 + 1 $<br>以此类推，得出递推式:<br>$ m_{x}=(n+1)×2^{x-1} $<br>则:<br>$ ans=(n+1)×(2^{m}-1)+n $<br>注意用快速幂和<code>long long</code><br>随手写了个代码，AC:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="keyword">int</span> m,n;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">ksm</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> c)</span><span class="comment">//a ^ b % c</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">1</span>;</span><br><span class="line">    a %= c;</span><br><span class="line">    <span class="keyword">while</span>(b)&#123;</span><br><span class="line">        <span class="keyword">if</span>(b &amp; <span class="number">1</span>)&#123;</span><br><span class="line">            ans = (ans * a) % c; </span><br><span class="line">        &#125;</span><br><span class="line">        b /= <span class="number">2</span>;</span><br><span class="line">        a = (a * a) % c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">signed</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%lld %lld"</span>,&amp;n,&amp;m);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%lld"</span>,((n + <span class="number">1</span>) * (ksm(<span class="number">2</span>,m,mod) - <span class="number">1</span>) + n) % mod);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>End.</p>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
          <category> c++ </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++ </tag>
            
            <tag> 题解 </tag>
            
            <tag> 洛谷 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NOI-ONLINE-2020-第一场</title>
      <link href="/archives/NOI-ONLINE-2020.html"/>
      <url>/archives/NOI-ONLINE-2020.html</url>
      
        <content type="html"><![CDATA[<h1 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h1><p>介于本次<a href="http://www.noi.cn/newsview.html?id=1174&hash=BBB849" target="_blank" rel="noopener"><code>NOI-ONLINE-2020</code></a>,由于某不知名的原因，没有报名，但在某位dalao的帮助下，还是弄到了题面。</p><h1 id="S-提高"><a href="#S-提高" class="headerlink" title="S(提高)"></a>S(提高)</h1><p>…</p><h1 id="J-普及"><a href="#J-普及" class="headerlink" title="J(普及)"></a>J(普及)</h1><h2 id="A"><a href="#A" class="headerlink" title="A"></a>A</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>小明的班上共有 $ n $ 元班费，同学们准备使用班费集体购买 $ 33 $ 种物品：<br>1.圆规，每个 $ 7 $ 元。<br>2.笔，每支 $ 4 $ 元。<br>3.笔记本，每本 $ 3 $ 元。<br>小明负责订购文具，设圆规，笔，笔记本的订购数量分别为 a,b,ca,b,c，他订购的原则依次如下：<br>1.$ n $ 元钱必须正好用光，即 $ 7a+4b+3c=n $。<br>2.在满足以上条件情况下，成套的数量尽可能大，即 $ min(a,b,c) $尽可能大。<br>3.在满足以上条件情况下，物品的总数尽可能大，即 $ a+b+c $ 尽可能大。<br>请你帮助小明求出满足条件的最优方案。可以证明若存在方案，则最优方案唯一。</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>输入仅一行一个整数，代表班费数量 $ n $。</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>如果问题无解，请输出 $ −1 $。</p><p>否则输出一行三个用空格隔开的整数 $ a, b, c $分别代表圆规、笔、笔记本的个数。</p><h3 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h3><h4 id="针对-n≤14"><a href="#针对-n≤14" class="headerlink" title="针对$ n≤14 $"></a>针对$ n≤14 $</h4><p>首先，我们要明白一点:$7+4+3=14$(<del>这一点很重要</del>)<br>其次，我们要发现当$ 3≤n≤14 $且$ n!=5 $中的每一个数是都可以由这三个数凑出来的例如:$ 13=7+3+3 $<br>So~</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(n == <span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">"0 0 0"</span>);<span class="comment">//注意0的情况</span></span><br><span class="line"><span class="keyword">if</span>(n &lt;= <span class="number">2</span> &amp;&amp; n &gt; <span class="number">0</span>)<span class="built_in">printf</span>(<span class="string">"-1"</span>);</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">3</span>)<span class="built_in">printf</span>(<span class="string">"0 0 1"</span>);</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">4</span>)<span class="built_in">printf</span>(<span class="string">"0 1 0"</span>);</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">5</span>)<span class="built_in">printf</span>(<span class="string">"-1"</span>);</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">6</span>)<span class="built_in">printf</span>(<span class="string">"0 0 2"</span>);</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">7</span>)<span class="built_in">printf</span>(<span class="string">"0,1,1"</span>);</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">8</span>)<span class="built_in">printf</span>(<span class="string">"0 2 0"</span>);</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">9</span>)<span class="built_in">printf</span>(<span class="string">"0 0 3"</span>);</span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">10</span>)<span class="built_in">printf</span>(<span class="string">"0 1 2"</span>);<span class="comment">//此处1 0 1也可以，但要求总数量最大，所以只能是0 1 2</span></span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">11</span>)<span class="built_in">printf</span>(<span class="string">"0 2 1"</span>);<span class="comment">//同上,1 1 0也可以</span></span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">12</span>)<span class="built_in">printf</span>(<span class="string">"0 0 4"</span>);<span class="comment">//同上,0 3 0也可以</span></span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">13</span>)<span class="built_in">printf</span>(<span class="string">"0 1 3"</span>);<span class="comment">//同上，1 0 2也可以</span></span><br><span class="line"><span class="keyword">if</span>(n == <span class="number">14</span>)<span class="built_in">printf</span>(<span class="string">"1 1 1"</span>);<span class="comment">//同上,2 0 0也可以</span></span><br></pre></td></tr></table></figure><h4 id="针对-n-14-0"><a href="#针对-n-14-0" class="headerlink" title="针对$ n \% 14==0 $"></a>针对$ n \% 14==0 $</h4><p>很显然，答案就为$ (n/14,n/14,n/14) $</p><h4 id="针对-n≤100"><a href="#针对-n≤100" class="headerlink" title="针对$ n≤100 $"></a>针对$ n≤100 $</h4><p>暴力…</p><h4 id="针对-n≤10-5"><a href="#针对-n≤10-5" class="headerlink" title="针对$ n≤10^{5} $"></a>针对$ n≤10^{5} $</h4><p>对于条件$ 1 $，我们在最后是判断剩余钱数$ %4 $是否为$ 0 $就行了<br>对于条件$ 2 $，我们只需要通过从大到小枚举套数就行了<br>对于条件$ 3 $，因为要求总数大，所以买一个$ a $不如买一个$ b $和一个$ c $<br>按上述方法模拟即可.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n,sum,a,b,c,vis;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=n/<span class="number">14</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        sum = n - <span class="number">14</span> * i,a = i,b = i,c = i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j*<span class="number">3</span>&lt;=sum;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>((sum - j * <span class="number">3</span>) % <span class="number">4</span> == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                vis = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span>(<span class="number">3</span> * i + (sum - j * <span class="number">3</span>) / <span class="number">4</span> + j &gt; a + b + c)</span><br><span class="line">                &#123;</span><br><span class="line">                    a = i,b = i + (sum - j * <span class="number">3</span>) / <span class="number">4</span>,c = i + j;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(vis)<span class="keyword">return</span> <span class="keyword">not</span> <span class="built_in">printf</span>(<span class="string">"%d %d %d"</span>,a,b,c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"-1"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><blockquote><p><a href="/dow/提高题面.rar">提高题面</a><br><a href="/dow/普及题面.rar">普及题面</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 比赛 </category>
          
          <category> NOIONLINE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++ </tag>
            
            <tag> NOIONLINE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Csp-J2019游记</title>
      <link href="/archives/Csp-J2019%E6%B8%B8%E8%AE%B0.html"/>
      <url>/archives/Csp-J2019%E6%B8%B8%E8%AE%B0.html</url>
      
        <content type="html"><![CDATA[<h1 id="Day-14"><a href="#Day-14" class="headerlink" title="Day_-14"></a><code>Day_-14</code></h1><p>学校开始停课集训，还好还有上午~~</p><h1 id="Day-7"><a href="#Day-7" class="headerlink" title="Day_-7"></a><code>Day_-7</code></h1><p>马上半期考试+$Csp$,心态已炸，却还要坚持集训</p><h1 id="Day-1"><a href="#Day-1" class="headerlink" title="Day_-1"></a><code>Day_-1</code></h1><p>$Csp$前夕，打算临时抱抱<del>佛脚</del>,死磕了一下<code>图论</code>(<code>诸如最小生成树</code>,<code>top序列</code>等)</p><h1 id="Day-0"><a href="#Day-0" class="headerlink" title="Day_0"></a><code>Day_0</code></h1><p>中午来到考场，由于来的过早，在车上睡了一会儿，然后进考场，但是好像座位号出了点锅(<del>不满</del>)，晚考了整整5分钟(似乎也没多久)，拿到题面，开始。<br>$T1$<del>真水</del>，迅速切掉，考场代码如下:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">char</span> c;</span><br><span class="line"><span class="keyword">int</span> sum;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=<span class="number">8</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; c;</span><br><span class="line"><span class="keyword">if</span>(c == <span class="string">'1'</span>)sum++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;sum;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>稳切~~</p><p>$T2$一开始快速打完一测，连样例都过不了，重新读题，找到问题，写完之后发现$TLE$(说好$T2$是道模拟呢?)很慌，暂且放弃<br>最后几分钟乱加了一个优化，竟然稀里糊涂的过了，后来仔细一想,复杂度直接从$O(n^{2})$优化到$O(45n)$，代码如下:</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e5</span> + <span class="number">5</span>;</span><br><span class="line"><span class="keyword">int</span> n,num,price,t,k,head=<span class="number">1</span>,ans;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> p;</span><br><span class="line">    <span class="keyword">int</span> ti;</span><br><span class="line">    <span class="keyword">int</span> mark;</span><br><span class="line">&#125;a[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    k=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>;i&lt;=n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d %d %d"</span>,&amp;num,&amp;price,&amp;t);</span><br><span class="line">        <span class="keyword">while</span>(<span class="number">1</span>&amp;&amp;head&lt;=k)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[head].ti+<span class="number">45</span>&gt;=t)<span class="keyword">break</span>;</span><br><span class="line">            head++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(num == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ans+=price;</span><br><span class="line">            a[++k].p=price;</span><br><span class="line">            a[k].ti=t;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(num == <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">bool</span> m=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=head;j&lt;=k;j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span>(a[j].p&gt;=price&amp;&amp;t-a[j].ti&lt;=<span class="number">45</span>&amp;&amp;!a[j].mark)</span><br><span class="line">                &#123;</span><br><span class="line">                    a[j].mark=<span class="number">1</span>;</span><br><span class="line">                    m=<span class="literal">false</span>;</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(m)ans+=price;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;ans;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>$T3$骗了10分,$T4$骗了20分，预估230$point$<br>后来想了想,$T3$写的有限背包~~<br><code>Day n</code><br>结果出来了:<br>混了个PJ一等。。。</p>]]></content>
      
      
      <categories>
          
          <category> trip </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++ </tag>
            
            <tag> 游记 </tag>
            
            <tag> CSP-J </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
